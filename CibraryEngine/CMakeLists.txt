#./CibraryEngine/CMakeLists.txt

## List of all source files. !!!Do not use file(GLOB)!!!
## Please keep this list alphabetical
set(ENGINE_SOURCES 
	AABB.cpp
	AABB.h
	AutoMenuItem.cpp
	AutoMenuItem.h
	BillboardMaterial.cpp
	BillboardMaterial.h
	BillboardTrail.cpp
	BillboardTrail.h
	BinaryChunk.cpp
	BinaryChunk.h
	BitmapFont.cpp
	BitmapFont.h
	Cache.h
	CameraView.cpp
	CameraView.h
	CibraryEngine.h
	Client.cpp
	Client.h
	CmdArgs.cpp
	CmdArgs.h
	CollisionGroup.cpp
	CollisionGroup.h
	CollisionObject.cpp
	CollisionObject.h
	CollisionShape.cpp
	CollisionShape.h
	Component.h
	Connection.cpp
	Connection.h
	ConstraintGraphSolver.h
	ContactDataCollector.cpp
	ContactDataCollector.h
	ContactPoint.cpp
	ContactPoint.h
	ContactRegion.h
	Content.h
	ContentHandle.h
	ContentMan.cpp
	ContentMan.h
	ContentMetadata.h
	ContentReqList.cpp
	ContentReqList.h
	ContentTypeHandler.h
	Control.cpp
	Control.h
	ConvexMeshShape.cpp
	ConvexMeshShape.h
	CPUConstraintGraphSolver.cpp
	CPUConstraintGraphSolver.h
	CubeTriangles.cpp
	CubeTriangles.h
	Cursor.cpp
	Cursor.h
	DebugDrawMaterial.cpp
	DebugDrawMaterial.h
	DebugLog.cpp
	DebugLog.h
	DestructibleTerrain.h
	Disposable.cpp
	Disposable.h
	DSNLoader.cpp
	DSNLoader.h
	DSNMaterial.cpp
	DSNMaterial.h
	DynamicsObject.cpp
	DynamicsObject.h
	EngineTypes.h
	Entity.cpp
	Entity.h
	EntityList.cpp
	EntityList.h
	Events.cpp
	Events.h
	FixedJointConstraint.cpp
	FixedJointConstraint.h
	FrameworkTypes.h
	GameState.cpp
	GameState.h
	GLee.c
	GLee.h
	GlowyModelMaterial.cpp
	GlowyModelMaterial.h
	GraphicsTypes.h
	GridRegionManager.cpp
	GridRegionManager.h
	HardwareAcceleratedComputation.cpp
	HardwareAcceleratedComputation.h
	ImageIO.cpp
	ImageIO.h
	Inbox.cpp
	Inbox.h
	InfinitePlaneShape.cpp
	InfinitePlaneShape.h
	InputState.cpp
	InputState.h
	KeyframeAnimation.cpp
	KeyframeAnimation.h
	Line.cpp
	Line.h
	MarchingCubes.cpp
	MarchingCubes.h
	MassInfo.cpp
	MassInfo.h
	Material.h
	MaterialLoader.cpp
	MaterialLoader.h
	MathTypes.h
	Matrix.cpp
	Matrix.h
	MenuItem.cpp
	MenuItem.h
	MenuScreen.cpp
	MenuScreen.h
	Model.cpp
	Model.h
	ModelLoader.cpp
	ModelLoader.h
	ModelPhysics.cpp
	ModelPhysics.h
	MultiMaterial.cpp
	MultiMaterial.h
	MultiSphereShape.cpp
	MultiSphereShape.h
	NavGraph.cpp
	NavGraph.h
	NetTypes.h
	Network.cpp
	Network.h
	NeuralNet.cpp
	NeuralNet.h
	Octree.h
	Outbox.cpp
	Outbox.h
	Packet.cpp
	Packet.h
	ParticleMaterial.cpp
	ParticleMaterial.h
	Pathfinding.cpp
	Pathfinding.h
	PerlinNoise.cpp
	PerlinNoise.h
	Physics.cpp
	Physics.h
	PhysicsRegion.cpp
	PhysicsRegion.h
	Plane.cpp
	Plane.h
	ProfilingTimer.cpp
	ProfilingTimer.h
	ProgramScreen.cpp
	ProgramScreen.h
	ProgramWindow.cpp
	ProgramWindow.h
	Quaternion.cpp
	Quaternion.h
	Random3D.cpp
	Random3D.h
	RayCollider.cpp
	RayCollider.h
	ReceivedPacket.cpp
	ReceivedPacket.h
	RenderNode.h
	RenderTarget.cpp
	RenderTarget.h
	RigidBody.cpp
	RigidBody.h
	SceneRenderer.cpp
	SceneRenderer.h
	ScreenshotGrabber.cpp
	ScreenshotGrabber.h
	Scripting.cpp
	Scripting.h
	Serialize.cpp
	Serialize.h
	Server.cpp
	Server.h
	ServerConnection.cpp
	ServerConnection.h
	Shader.cpp
	Shader.h
	SkeletalAnimation.cpp
	SkeletalAnimation.h
	SkeletalJointConstraint.cpp
	SkeletalJointConstraint.h
	SmartHashSet.h
	SoundBuffer.cpp
	SoundBuffer.h
	SoundSource.cpp
	SoundSource.h
	SoundSystem.cpp
	SoundSystem.h
	SoundTypes.h
	Sphere.cpp
	Sphere.h
	SphereShape.cpp
	SphereShape.h
	StdAfx.cpp
	StdAfx.h
	StringTable.cpp
	StringTable.h
	TableParse.cpp
	TableParse.h
	TaskThread.cpp
	TaskThread.h
	TerrainChunk.cpp
	TerrainChunk.h
	TerrainNode.cpp
	TerrainNode.h
	TerrainVertex.cpp
	TerrainVertex.h
	Texture.h
	Texture1D.cpp
	Texture1D.h
	Texture2D.cpp
	Texture2D.h
	Texture3D.cpp
	Texture3D.h
	TextureBuffer.cpp
	TextureBuffer.h
	TextureCube.cpp
	TextureCube.h
	TimingInfo.cpp
	TimingInfo.h
	TriangleMeshShape.cpp
	TriangleMeshShape.h
	UberModel.cpp
	UberModel.h
	UnclampedVertexBoneWeightInfo.cpp
	UnclampedVertexBoneWeightInfo.h
	UniformVariables.cpp
	UniformVariables.h
	Util.cpp
	Util.h
	Vector.cpp
	Vector.h
	VertexBuffer.cpp
	VertexBuffer.h
	VisionBlocker.cpp
	VisionBlocker.h
	VoxelMaterial.cpp
	VoxelMaterial.h
	VoxelTerrain.cpp
	VoxelTerrain.h
)

## Resources (scripts, artwork, etc) directories
include_directories("${PROJECT_SOURCE_DIR}/Files")

## Third party libs an utils directores
## Third Party libs and packages supported by Cmake find_package.
## This effectively sets a number of variables within cmake.  notably <name>_ROOT for the root directory of the package
find_package(Boost COMPONENTS date_time REQUIRED)
find_package(OpenGL REQUIRED)

include_directories("${PROJECT_SOURCE_DIR}/build/include")          #For OpenAL and OpenGL include files
include_directories(${Boost_INCLUDE_DIRS})
include_directories(${OPENGL_INCLUDE_DIRS})
include_directories(${SOIL_ROOT}/src)
include_directories(${LUA_INCLUDE})

## Build the lib
add_library(CibraryEngine STATIC ${ENGINE_SOURCES})

## Link to other libs
#boost
#soil
#lua
#winSDK